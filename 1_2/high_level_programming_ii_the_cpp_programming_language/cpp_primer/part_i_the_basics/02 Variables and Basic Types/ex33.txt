Using the variable definitions from this section, determine what happens in each of these assignments:

int i = 0, &r = i;
const int ci = i, &cr = ci;

auto a = r;   // a is an int (r is an alias for i, which has type int)
auto b = ci;  // b is an int (top-level const in ci is dropped)
auto c = cr;  // c is an int (cr is an alias for ci whose const is top-level)
auto d = &i;  // d is an int*(& of an int object is int*)
auto e = &ci; // e is const int*(& of a const object is low-level const)
auto &g = ci; // g is a const int& that is bound to ci

a = 42;
legal. a is 42.

b = 42;
legal. b is 42.

c = 42;
legal. c is 42.

d = 42;
illegal. d is int *
int to int *

e = 42;
illegal. e is const int *
int to const int *

g = 42;
illegal. g is a const int &
assignment to const int